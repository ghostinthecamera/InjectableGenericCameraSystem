Dying Light
=====================

Axis:
X: + to the right
Y: + up
Z: + out of the screen

Timestop:
engine_x64_rwdi.dll+28FFC0 - 48 8B 41 08           - mov rax,[rcx+08]
engine_x64_rwdi.dll+28FFC4 - 48 05 280F0000        - add rax,00000F28 { 3880 }
engine_x64_rwdi.dll+28FFCA - 80 78 30 00           - cmp byte ptr [rax+30],00						<< Read pause byte. 
engine_x64_rwdi.dll+28FFCE - 74 09                 - je engine_x64_rwdi.dll+28FFD9
engine_x64_rwdi.dll+28FFD0 - 80 78 48 00           - cmp byte ptr [rax+48],00						<< Read second pause byte. Keep byte at 0 for pause.
engine_x64_rwdi.dll+28FFD4 - 75 03                 - jne engine_x64_rwdi.dll+28FFD9
engine_x64_rwdi.dll+28FFD6 - B0 01                 - mov al,01 { 1 }
engine_x64_rwdi.dll+28FFD8 - C3                    - ret 
engine_x64_rwdi.dll+28FFD9 - 32 C0                 - xor al,al
engine_x64_rwdi.dll+28FFDB - C3                    - ret 

Gamespeed: (actors etc. particles, wind, keep normal speed)
engine_x64_rwdi.dll+28FFE0 - 48 8B 41 08           - mov rax,[rcx+08]
engine_x64_rwdi.dll+28FFE4 - F3 0F11 88 500F0000   - movss [rax+00000F50],xmm1						<< Write game speed (1.0f is normal speed, 0.0f is frozen). 
engine_x64_rwdi.dll+28FFEC - C3                    - ret 

GetViewMatrix (for camera address).
// This gets 2 matrices. The first is the inverse lighting matrix and we don't need that. The view matrix is at offset 0x30
engine_x64_rwdi.dll+121E90 - 48 8B 41 08           - mov rax,[rcx+08]								<< Get pointer to matrix struct. 
engine_x64_rwdi.dll+121E94 - 48 85 C0              - test rax,rax
engine_x64_rwdi.dll+121E97 - 74 05                 - je engine_x64_rwdi.dll+121E9E
engine_x64_rwdi.dll+121E99 - 48 83 C0 10           - add rax,10										<< Calculate base address from original pointer.
engine_x64_rwdi.dll+121E9D - C3                    - ret 
engine_x64_rwdi.dll+121E9E - 48 8D 05 0B248E00     - lea rax,[engine_x64_rwdi.dll+A042B0]
engine_x64_rwdi.dll+121EA5 - C3                    - ret 
engine_x64_rwdi.dll+121EA6 - CC                    - int 3 

GetFoV
engine_x64_rwdi.dll+121A00 - 48 8B 41 08           - mov rax,[rcx+08]
engine_x64_rwdi.dll+121A04 - F3 0F10 80 D4020000   - movss xmm0,[rax+000002D4]						<< Get FOV
engine_x64_rwdi.dll+121A0C - F3 0F59 05 606B7900   - mulss xmm0,[engine_x64_rwdi.dll+8B8574]
engine_x64_rwdi.dll+121A14 - F3 0F59 05 946B7900   - mulss xmm0,[engine_x64_rwdi.dll+8B85B0]
engine_x64_rwdi.dll+121A1C - C3                    - ret 

FOV is located at the offset 0x2C4, not 0x2D4, from the address returned by GetViewMatrix, as the GetViewMatrix returns an address that's 0x10 offset from the struct root

FOV Write
engine_x64_rwdi.dll+11F573 - F3 0F11 B3 D4020000   - movss [rbx+000002D4],xmm6						<< WRITE FOV
engine_x64_rwdi.dll+11F57B - F3 0F59 35 B1A26C00   - mulss xmm6,[engine_x64_rwdi.dll+7E9834]
engine_x64_rwdi.dll+11F583 - 0F28 C6               - movaps xmm0,xmm6
engine_x64_rwdi.dll+11F586 - E8 DB606900           - call engine_x64_rwdi.dll+7B5666
engine_x64_rwdi.dll+11F58B - 48 8B 05 76A69000     - mov rax,[engine_x64_rwdi.dll+A29C08]
engine_x64_rwdi.dll+11F592 - F3 0F59 C7            - mulss xmm0,xmm7
// v1.28:
engine_x64_rwdi.dll+11EE9C - FF 50 28              - call qword ptr [rax+28]
engine_x64_rwdi.dll+11EE9F - 84 C0                 - test al,al
engine_x64_rwdi.dll+11EEA1 - 74 10                 - je engine_x64_rwdi.dll+11EEB3
engine_x64_rwdi.dll+11EEA3 - 48 8B 0D DE069100     - mov rcx,[engine_x64_rwdi.dll+A2F588] { (09367A10) }
engine_x64_rwdi.dll+11EEAA - 48 8B 01              - mov rax,[rcx]
engine_x64_rwdi.dll+11EEAD - FF 50 48              - call qword ptr [rax+48]
engine_x64_rwdi.dll+11EEB0 - 0F28 F0               - movaps xmm6,xmm0
engine_x64_rwdi.dll+11EEB3 - F3 0F11 B3 D4020000   - movss [rbx+000002D4],xmm6					<< WRITE FOV
engine_x64_rwdi.dll+11EEBB - F3 0F59 35 01CB6C00   - mulss xmm6,[engine_x64_rwdi.dll+7EB9C4]
engine_x64_rwdi.dll+11EEC3 - 0F28 C6               - movaps xmm0,xmm6
engine_x64_rwdi.dll+11EEC6 - E8 8B7B6900           - call engine_x64_rwdi.dll+7B6A56
engine_x64_rwdi.dll+11EECB - 48 8B 05 A6DD9000     - mov rax,[engine_x64_rwdi.dll+A2CC78]
engine_x64_rwdi.dll+11EED2 - F3 0F59 C7            - mulss xmm0,xmm7

Generic matrix write code:. Test if RCX points to our camera struct. If so, skip, otherwise proceed.
engine_x64_rwdi.dll+676510 - 48 83 EC 48           - sub rsp,48 { 72 }
engine_x64_rwdi.dll+676514 - 0F29 74 24 30         - movaps [rsp+30],xmm6
engine_x64_rwdi.dll+676519 - F3 41 0F10 70 08      - movss xmm6,[r8+08]
engine_x64_rwdi.dll+67651F - 0F29 7C 24 20         - movaps [rsp+20],xmm7
engine_x64_rwdi.dll+676524 - F3 41 0F10 38         - movss xmm7,[r8]
engine_x64_rwdi.dll+676529 - 44 0F29 44 24 10      - movaps [rsp+10],xmm8
engine_x64_rwdi.dll+67652F - F3 45 0F10 40 04      - movss xmm8,[r8+04]
engine_x64_rwdi.dll+676535 - 0F28 C7               - movaps xmm0,xmm7
engine_x64_rwdi.dll+676538 - 41 0F28 D0            - movaps xmm2,xmm8
engine_x64_rwdi.dll+67653C - F3 0F59 C7            - mulss xmm0,xmm7
engine_x64_rwdi.dll+676540 - 0F28 CE               - movaps xmm1,xmm6
engine_x64_rwdi.dll+676543 - 44 0F29 0C 24         - movaps [rsp],xmm9
engine_x64_rwdi.dll+676548 - F3 41 0F59 D0         - mulss xmm2,xmm8
engine_x64_rwdi.dll+67654D - F3 0F59 CE            - mulss xmm1,xmm6
engine_x64_rwdi.dll+676551 - F3 44 0F10 0D A2371700  - movss xmm9,[engine_x64_rwdi.dll+7E9CFC] { [1.00] }
engine_x64_rwdi.dll+67655A - F3 0F58 D0            - addss xmm2,xmm0
engine_x64_rwdi.dll+67655E - F3 0F58 D1            - addss xmm2,xmm1
engine_x64_rwdi.dll+676562 - F3 0F51 DA            - sqrtss xmm3,xmm2
engine_x64_rwdi.dll+676566 - 0F2F 1D 672F1F00      - comiss xmm3,[engine_x64_rwdi.dll+8694D4] { [0.00] }
engine_x64_rwdi.dll+67656D - 76 15                 - jna engine_x64_rwdi.dll+676584
engine_x64_rwdi.dll+67656F - 41 0F28 C1            - movaps xmm0,xmm9
engine_x64_rwdi.dll+676573 - F3 0F5E C3            - divss xmm0,xmm3
engine_x64_rwdi.dll+676577 - F3 0F59 F8            - mulss xmm7,xmm0
engine_x64_rwdi.dll+67657B - F3 44 0F59 C0         - mulss xmm8,xmm0
engine_x64_rwdi.dll+676580 - F3 0F59 F0            - mulss xmm6,xmm0
engine_x64_rwdi.dll+676584 - F3 0F11 79 08         - movss [rcx+08],xmm7
engine_x64_rwdi.dll+676589 - F3 44 0F11 41 18      - movss [rcx+18],xmm8
engine_x64_rwdi.dll+67658F - F3 0F11 71 28         - movss [rcx+28],xmm6
engine_x64_rwdi.dll+676594 - F3 41 0F10 49 04      - movss xmm1,[r9+04]
engine_x64_rwdi.dll+67659A - F3 41 0F10 69 08      - movss xmm5,[r9+08]
engine_x64_rwdi.dll+6765A0 - F3 41 0F10 19         - movss xmm3,[r9]
engine_x64_rwdi.dll+6765A5 - 0F28 E1               - movaps xmm4,xmm1
engine_x64_rwdi.dll+6765A8 - 0F28 C5               - movaps xmm0,xmm5
engine_x64_rwdi.dll+6765AB - F3 0F59 CF            - mulss xmm1,xmm7
engine_x64_rwdi.dll+6765AF - F3 41 0F59 C0         - mulss xmm0,xmm8
engine_x64_rwdi.dll+6765B4 - F3 0F59 E6            - mulss xmm4,xmm6
engine_x64_rwdi.dll+6765B8 - F3 0F59 EF            - mulss xmm5,xmm7
engine_x64_rwdi.dll+6765BC - F3 0F5C E0            - subss xmm4,xmm0
engine_x64_rwdi.dll+6765C0 - 0F28 C3               - movaps xmm0,xmm3
engine_x64_rwdi.dll+6765C3 - 0F28 D4               - movaps xmm2,xmm4
engine_x64_rwdi.dll+6765C6 - F3 0F59 C6            - mulss xmm0,xmm6
engine_x64_rwdi.dll+6765CA - F3 41 0F59 D8         - mulss xmm3,xmm8
engine_x64_rwdi.dll+6765CF - F3 0F59 D4            - mulss xmm2,xmm4
engine_x64_rwdi.dll+6765D3 - F3 0F5C D9            - subss xmm3,xmm1
engine_x64_rwdi.dll+6765D7 - F3 0F5C E8            - subss xmm5,xmm0
engine_x64_rwdi.dll+6765DB - 0F28 C5               - movaps xmm0,xmm5
engine_x64_rwdi.dll+6765DE - 0F28 CB               - movaps xmm1,xmm3
engine_x64_rwdi.dll+6765E1 - F3 0F59 CB            - mulss xmm1,xmm3
engine_x64_rwdi.dll+6765E5 - F3 0F59 C5            - mulss xmm0,xmm5
engine_x64_rwdi.dll+6765E9 - F3 0F58 D0            - addss xmm2,xmm0
engine_x64_rwdi.dll+6765ED - F3 0F58 D1            - addss xmm2,xmm1
engine_x64_rwdi.dll+6765F1 - F3 0F51 CA            - sqrtss xmm1,xmm2
engine_x64_rwdi.dll+6765F5 - 0F2F 0D D82E1F00      - comiss xmm1,[engine_x64_rwdi.dll+8694D4] { [0.00] }
engine_x64_rwdi.dll+6765FC - 76 14                 - jna engine_x64_rwdi.dll+676612
engine_x64_rwdi.dll+6765FE - 41 0F28 C1            - movaps xmm0,xmm9
engine_x64_rwdi.dll+676602 - F3 0F5E C1            - divss xmm0,xmm1
engine_x64_rwdi.dll+676606 - F3 0F59 E0            - mulss xmm4,xmm0
engine_x64_rwdi.dll+67660A - F3 0F59 E8            - mulss xmm5,xmm0
engine_x64_rwdi.dll+67660E - F3 0F59 D8            - mulss xmm3,xmm0
engine_x64_rwdi.dll+676612 - 0F2F 0D 8F761C00      - comiss xmm1,[engine_x64_rwdi.dll+83DCA8] { [0.00] }
engine_x64_rwdi.dll+676619 - 73 6A                 - jae engine_x64_rwdi.dll+676685
engine_x64_rwdi.dll+67661B - 0F57 D2               - xorps xmm2,xmm2
engine_x64_rwdi.dll+67661E - 0F28 CF               - movaps xmm1,xmm7
engine_x64_rwdi.dll+676621 - 0F28 E6               - movaps xmm4,xmm6
engine_x64_rwdi.dll+676624 - 41 0F28 C0            - movaps xmm0,xmm8
engine_x64_rwdi.dll+676628 - 41 0F28 D8            - movaps xmm3,xmm8
engine_x64_rwdi.dll+67662C - F3 0F59 CA            - mulss xmm1,xmm2
engine_x64_rwdi.dll+676630 - F3 0F59 E2            - mulss xmm4,xmm2
engine_x64_rwdi.dll+676634 - 0F28 E9               - movaps xmm5,xmm1
engine_x64_rwdi.dll+676637 - F3 0F5C D9            - subss xmm3,xmm1
engine_x64_rwdi.dll+67663B - F3 0F59 C2            - mulss xmm0,xmm2
engine_x64_rwdi.dll+67663F - 0F28 CB               - movaps xmm1,xmm3
engine_x64_rwdi.dll+676642 - F3 0F5C EE            - subss xmm5,xmm6
engine_x64_rwdi.dll+676646 - F3 0F59 CB            - mulss xmm1,xmm3
engine_x64_rwdi.dll+67664A - F3 0F5C E0            - subss xmm4,xmm0
engine_x64_rwdi.dll+67664E - 0F28 D5               - movaps xmm2,xmm5
engine_x64_rwdi.dll+676651 - F3 0F59 D5            - mulss xmm2,xmm5
engine_x64_rwdi.dll+676655 - 0F28 C4               - movaps xmm0,xmm4
engine_x64_rwdi.dll+676658 - F3 0F59 C4            - mulss xmm0,xmm4
engine_x64_rwdi.dll+67665C - F3 0F58 D0            - addss xmm2,xmm0
engine_x64_rwdi.dll+676660 - F3 0F58 D1            - addss xmm2,xmm1
engine_x64_rwdi.dll+676664 - F3 0F51 C2            - sqrtss xmm0,xmm2
engine_x64_rwdi.dll+676668 - 0F2F 05 652E1F00      - comiss xmm0,[engine_x64_rwdi.dll+8694D4] { [0.00] }
engine_x64_rwdi.dll+67666F - 76 14                 - jna engine_x64_rwdi.dll+676685
engine_x64_rwdi.dll+676671 - F3 44 0F5E C8         - divss xmm9,xmm0
engine_x64_rwdi.dll+676676 - F3 41 0F59 E1         - mulss xmm4,xmm9
engine_x64_rwdi.dll+67667B - F3 41 0F59 E9         - mulss xmm5,xmm9
engine_x64_rwdi.dll+676680 - F3 41 0F59 D9         - mulss xmm3,xmm9
engine_x64_rwdi.dll+676685 - 44 0F28 0C 24         - movaps xmm9,[rsp]
engine_x64_rwdi.dll+67668A - 0F28 C6               - movaps xmm0,xmm6
engine_x64_rwdi.dll+67668D - F3 0F11 59 20         - movss [rcx+20],xmm3
engine_x64_rwdi.dll+676692 - F3 0F11 21            - movss [rcx],xmm4
engine_x64_rwdi.dll+676696 - F3 0F11 69 10         - movss [rcx+10],xmm5
engine_x64_rwdi.dll+67669B - F3 0F59 F4            - mulss xmm6,xmm4
engine_x64_rwdi.dll+67669F - F3 0F59 C5            - mulss xmm0,xmm5
engine_x64_rwdi.dll+6766A3 - 0F28 CB               - movaps xmm1,xmm3
engine_x64_rwdi.dll+6766A6 - F3 0F59 DF            - mulss xmm3,xmm7
engine_x64_rwdi.dll+6766AA - F3 41 0F59 C8         - mulss xmm1,xmm8
engine_x64_rwdi.dll+6766AF - F3 44 0F59 C4         - mulss xmm8,xmm4
engine_x64_rwdi.dll+6766B4 - F3 0F5C F3            - subss xmm6,xmm3
engine_x64_rwdi.dll+6766B8 - F3 0F5C C8            - subss xmm1,xmm0
engine_x64_rwdi.dll+6766BC - F3 0F11 71 14         - movss [rcx+14],xmm6
engine_x64_rwdi.dll+6766C1 - F3 0F11 49 04         - movss [rcx+04],xmm1
engine_x64_rwdi.dll+6766C6 - F3 0F59 FD            - mulss xmm7,xmm5
engine_x64_rwdi.dll+6766CA - 0F28 74 24 30         - movaps xmm6,[rsp+30]
engine_x64_rwdi.dll+6766CF - F3 41 0F5C F8         - subss xmm7,xmm8
engine_x64_rwdi.dll+6766D4 - 44 0F28 44 24 10      - movaps xmm8,[rsp+10]
engine_x64_rwdi.dll+6766DA - F3 0F11 79 24         - movss [rcx+24],xmm7
engine_x64_rwdi.dll+6766DF - 0F28 7C 24 20         - movaps xmm7,[rsp+20]
engine_x64_rwdi.dll+6766E4 - 8B 02                 - mov eax,[rdx]
engine_x64_rwdi.dll+6766E6 - 89 41 0C              - mov [rcx+0C],eax
engine_x64_rwdi.dll+6766E9 - 8B 42 04              - mov eax,[rdx+04]
engine_x64_rwdi.dll+6766EC - 89 41 1C              - mov [rcx+1C],eax
engine_x64_rwdi.dll+6766EF - 8B 42 08              - mov eax,[rdx+08]
engine_x64_rwdi.dll+6766F2 - 89 41 2C              - mov [rcx+2C],eax
engine_x64_rwdi.dll+6766F5 - 48 83 C4 48           - add rsp,48 { 72 }
engine_x64_rwdi.dll+6766F9 - C3                    - ret 

LOD value read
engine_x64_rwdi.dll+5098A5 - F3 0F10 88 30020000   - movss xmm1,[rax+00000230]
engine_x64_rwdi.dll+5098AD - F3 0F59 4A 28         - mulss xmm1,[rdx+28]							<< LOD1 Read. set to 10000.0f
engine_x64_rwdi.dll+5098B2 - F3 0F59 C9            - mulss xmm1,xmm1
engine_x64_rwdi.dll+5098B6 - F3 0F5E C1            - divss xmm0,xmm1
engine_x64_rwdi.dll+5098BA - F3 41 0F11 86 84010000  - movss [r14+00000184],xmm0
engine_x64_rwdi.dll+5098C3 - 49 8B 40 30           - mov rax,[r8+30]
engine_x64_rwdi.dll+5098C7 - F3 0F10 88 30020000   - movss xmm1,[rax+00000230]
engine_x64_rwdi.dll+5098CF - F3 0F59 4A 2C         - mulss xmm1,[rdx+2C]							<< LOD2 Read. set to 10000.0f
engine_x64_rwdi.dll+5098D4 - F3 0F59 C9            - mulss xmm1,xmm1
engine_x64_rwdi.dll+5098D8 - F3 0F5E D9            - divss xmm3,xmm1
engine_x64_rwdi.dll+5098DC - F3 41 0F11 9E 88010000  - movss [r14+00000188],xmm3
engine_x64_rwdi.dll+5098E5 - 49 8B 48 08           - mov rcx,[r8+08]

HUD toggle:
engine_x64_rwdi.dll+5994B7 - 83 F8 01              - cmp eax,01
engine_x64_rwdi.dll+5994BA - 74 0B                 - je engine_x64_rwdi.dll+5994C7
engine_x64_rwdi.dll+5994BC - 85 C0                 - test eax,eax
engine_x64_rwdi.dll+5994BE - 48 8D 87 9C010000     - lea rax,[rdi+0000019C]
engine_x64_rwdi.dll+5994C5 - 75 07                 - jne engine_x64_rwdi.dll+5994CE
engine_x64_rwdi.dll+5994C7 - 48 8D 87 60010000     - lea rax,[rdi+00000160]
engine_x64_rwdi.dll+5994CE - 80 78 38 00           - cmp byte ptr [rax+38],00						<< HUD Visible read (1 is shown, 0 is hidden).
engine_x64_rwdi.dll+5994D2 - F3 0F10 3D 22082500   - movss xmm7,[engine_x64_rwdi.dll+7E9CFC]
engine_x64_rwdi.dll+5994DA - 74 5B                 - je engine_x64_rwdi.dll+599537
engine_x64_rwdi.dll+5994DC - E8 CFE5A7FF           - call engine_x64_rwdi.dll+17AB0

This calls this function, which renders the HUD. Placing a RET at the start hides the hud.
engine_x64_rwdi.dll+5B8B20 - 40 53                 - push rbx										<< REPLACE WITH RET to hide hud.
engine_x64_rwdi.dll+5B8B22 - 48 83 EC 40           - sub rsp,40
engine_x64_rwdi.dll+5B8B26 - 0F29 74 24 30         - movaps [rsp+30],xmm6
engine_x64_rwdi.dll+5B8B2B - 0F29 7C 24 20         - movaps [rsp+20],xmm7
engine_x64_rwdi.dll+5B8B30 - 48 8B D9              - mov rbx,rcx
engine_x64_rwdi.dll+5B8B33 - 0F28 FB               - movaps xmm7,xmm3
engine_x64_rwdi.dll+5B8B36 - E8 4509FEFF           - call engine_x64_rwdi.dll+599480
engine_x64_rwdi.dll+5B8B3B - E8 70EFA5FF           - call engine_x64_rwdi.dll+17AB0
engine_x64_rwdi.dll+5B8B40 - 83 F8 01              - cmp eax,01 { 1 }
engine_x64_rwdi.dll+5B8B43 - 74 0B                 - je engine_x64_rwdi.dll+5B8B50
engine_x64_rwdi.dll+5B8B45 - 85 C0                 - test eax,eax
engine_x64_rwdi.dll+5B8B47 - 48 8D 83 9C010000     - lea rax,[rbx+0000019C]
engine_x64_rwdi.dll+5B8B4E - 75 07                 - jne engine_x64_rwdi.dll+5B8B57
engine_x64_rwdi.dll+5B8B50 - 48 8D 83 60010000     - lea rax,[rbx+00000160]

// Time of Day
// READ. Important: in different DLL so we need to obtain the image address for the AOB scan!
gamedll_x64_rwdi.dll+109C791 - 48 8B 93 A8090000     - mov rdx,[rbx+000009A8]
gamedll_x64_rwdi.dll+109C798 - 41 B8 04000000        - mov r8d,00000004 { 4 }
gamedll_x64_rwdi.dll+109C79E - 8B 52 50              - mov edx,[rdx+50]
gamedll_x64_rwdi.dll+109C7A1 - 48 8B C8              - mov rcx,rax
gamedll_x64_rwdi.dll+109C7A4 - E8 47291D00           - call gamedll_x64_rwdi.dll+126F0F0
gamedll_x64_rwdi.dll+109C7A9 - 48 8B CF              - mov rcx,rdi
gamedll_x64_rwdi.dll+109C7AC - 48 85 C0              - test rax,rax
gamedll_x64_rwdi.dll+109C7AF - 48 0F45 C8            - cmovne rcx,rax
gamedll_x64_rwdi.dll+109C7B3 - F3 0F10 39            - movss xmm7,[rcx]			<< READ ToD (float: hour (0/24) is value > 0, fraction is minutes % of hour)
gamedll_x64_rwdi.dll+109C7B7 - EB 03                 - jmp gamedll_x64_rwdi.dll+109C7BC
gamedll_x64_rwdi.dll+109C7B9 - 0F28 FE               - movaps xmm7,xmm6			<< A relative jump lands here!
gamedll_x64_rwdi.dll+109C7BC - 48 83 BB B0090000 00  - cmp qword ptr [rbx+000009B0],00 { 0 }
gamedll_x64_rwdi.dll+109C7C4 - 74 2C                 - je gamedll_x64_rwdi.dll+109C7F2

// WRITE. Used for many addresses, so we need to filter the target address first!
engine_x64_rwdi.dll+254409 - 0F29 74 24 20         - movaps [rsp+20],xmm6
engine_x64_rwdi.dll+25440E - 0F28 F2               - movaps xmm6,xmm2
engine_x64_rwdi.dll+254411 - E8 1A204F00           - call engine_x64_rwdi.dll+746430
engine_x64_rwdi.dll+254416 - 48 85 C0              - test rax,rax
engine_x64_rwdi.dll+254419 - 74 1C                 - je engine_x64_rwdi.dll+254437
engine_x64_rwdi.dll+25441B - F3 0F11 30            - movss [rax],xmm6			<< WRITE TOD. Used for *many* objects. Filter out our address!
engine_x64_rwdi.dll+25441F - 8B 43 08              - mov eax,[rbx+08]
engine_x64_rwdi.dll+254422 - 83 F8 FE              - cmp eax,-02
engine_x64_rwdi.dll+254425 - 72 10                 - jb engine_x64_rwdi.dll+254437
engine_x64_rwdi.dll+254427 - E8 14AADDFF           - call engine_x64_rwdi.dll+2EE40
engine_x64_rwdi.dll+25442C - 48 8B D3              - mov rdx,rbx
engine_x64_rwdi.dll+25442F - 48 8B C8              - mov rcx,rax
engine_x64_rwdi.dll+254432 - E8 89A8DDFF           - call engine_x64_rwdi.dll+2ECC0
engine_x64_rwdi.dll+254437 - 0F28 74 24 20         - movaps xmm6,[rsp+20]
engine_x64_rwdi.dll+25443C - 48 83 C4 30           - add rsp,30 { 48 }
engine_x64_rwdi.dll+254440 - 5B                    - pop rbx
engine_x64_rwdi.dll+254441 - F3 C3                 - repe ret 
// v1.28:
engine_x64_rwdi.dll+255309 - 0F29 74 24 20         - movaps [rsp+20],xmm6
engine_x64_rwdi.dll+25530E - 0F28 F2               - movaps xmm6,xmm2
engine_x64_rwdi.dll+255311 - E8 9A244F00           - call engine_x64_rwdi.dll+7477B0
engine_x64_rwdi.dll+255316 - 48 85 C0              - test rax,rax
engine_x64_rwdi.dll+255319 - 74 1C                 - je engine_x64_rwdi.dll+255337
engine_x64_rwdi.dll+25531B - F3 0F11 30            - movss [rax],xmm6			<< WRITE TOD. Used for *many* objects. Filter out our address!
engine_x64_rwdi.dll+25531F - 8B 43 08              - mov eax,[rbx+08]
engine_x64_rwdi.dll+255322 - 83 F8 FE              - cmp eax,-02
engine_x64_rwdi.dll+255325 - 72 10                 - jb engine_x64_rwdi.dll+255337
engine_x64_rwdi.dll+255327 - E8 449ADDFF           - call engine_x64_rwdi.dll+2ED70
engine_x64_rwdi.dll+25532C - 48 8B D3              - mov rdx,rbx
engine_x64_rwdi.dll+25532F - 48 8B C8              - mov rcx,rax
engine_x64_rwdi.dll+255332 - E8 B998DDFF           - call engine_x64_rwdi.dll+2EBF0
engine_x64_rwdi.dll+255337 - 0F28 74 24 20         - movaps xmm6,[rsp+20]
engine_x64_rwdi.dll+25533C - 48 83 C4 30           - add rsp,30 { 48 }

Hotsampling:
- change window
- set resolution to the resolution of the window, then go back to the game, the game resizes the viewport to the set resolution.

To obtain the resolution address:
GetScreenWidth:
engine_x64_rwdi.dll+232D80 - 48 8B 41 08           - mov rax,[rcx+08]
engine_x64_rwdi.dll+232D84 - 48 8B 88 C0000000     - mov rcx,[rax+000000C0]
engine_x64_rwdi.dll+232D8B - 8B 01                 - mov eax,[rcx]
engine_x64_rwdi.dll+232D8D - C3                    - ret 
engine_x64_rwdi.dll+232D8E - CC                    - int 3 
engine_x64_rwdi.dll+232D8F - CC                    - int 3 

This is the render resolution. To set the window resolution, set it at: rcx+14 & rcx+18.
We know the new resolution when ResizeBuffers is called, as the game itself does set the viewport to the new resolution. 
